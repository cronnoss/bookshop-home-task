definitions:
  httpserver.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  httpserver.BookRequest:
    properties:
      author:
        type: string
      categoryId:
        type: integer
      price:
        type: integer
      stock:
        type: integer
      title:
        type: string
      year:
        type: integer
    type: object
  httpserver.BookResponse:
    properties:
      author:
        type: string
      categoryId:
        type: integer
      id:
        type: integer
      price:
        type: integer
      stock:
        type: integer
      title:
        type: string
      year:
        type: integer
    type: object
  httpserver.CartRequest:
    properties:
      bookIds:
        items:
          type: integer
        type: array
    type: object
  httpserver.CartResponse:
    properties:
      bookIds:
        items:
          type: integer
        type: array
    type: object
  httpserver.CategoryRequest:
    properties:
      name:
        type: string
    type: object
  httpserver.CategoryResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  server.ErrorResponse:
    properties:
      error:
        type: string
      slug:
        type: string
    type: object
info:
  contact: {}
  description: API Server for Book Shop Application
  title: Book Shop API
  version: "1.0"
paths:
  /book:
    post:
      consumes:
      - application/json
      description: create book
      operationId: create-book
      parameters:
      - description: book info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.BookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateBook
      tags:
      - book
  /book/{book_id}:
    delete:
      consumes:
      - application/json
      description: delete book by ID
      operationId: delete-book
      parameters:
      - description: book ID
        in: path
        name: book_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteBook
      tags:
      - book
    get:
      consumes:
      - application/json
      description: get book by ID
      operationId: get-book
      parameters:
      - description: book ID
        in: path
        name: book_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.BookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      summary: GetBook
      tags:
      - book
    patch:
      consumes:
      - application/json
      description: update book by ID
      operationId: update-book
      parameters:
      - description: book ID
        in: path
        name: book_id
        required: true
        type: integer
      - description: book info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.BookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateBook
      tags:
      - book
  /books:
    get:
      consumes:
      - application/json
      description: get books
      operationId: get-books
      parameters:
      - collectionFormat: csv
        description: category ID
        in: query
        items:
          type: integer
        name: category_id
        type: array
      - description: page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/httpserver.BookResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      summary: GetBooks
      tags:
      - book
  /cart:
    post:
      consumes:
      - application/json
      description: update cart
      operationId: update-cart
      parameters:
      - description: cart info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.CartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.CartResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateCart
      tags:
      - cart
  /categories:
    get:
      consumes:
      - application/json
      description: get all categories
      operationId: get-categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/httpserver.CategoryResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      summary: GetCategories
      tags:
      - category
  /category:
    post:
      consumes:
      - application/json
      description: create category
      operationId: create-category
      parameters:
      - description: category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateCategory
      tags:
      - category
  /category/{category_id}:
    delete:
      consumes:
      - application/json
      description: delete category by ID
      operationId: delete-category
      parameters:
      - description: category ID
        in: path
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteCategory
      tags:
      - category
    get:
      consumes:
      - application/json
      description: get category by ID
      operationId: get-category
      parameters:
      - description: category ID
        in: path
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      summary: GetCategory
      tags:
      - category
    patch:
      consumes:
      - application/json
      description: update category by ID
      operationId: update-category
      parameters:
      - description: category ID
        in: path
        name: category_id
        required: true
        type: integer
      - description: category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateCategory
      tags:
      - category
  /checkout:
    post:
      consumes:
      - application/json
      description: checkout
      operationId: checkout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Checkout
      tags:
      - cart
  /signin:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpserver.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
